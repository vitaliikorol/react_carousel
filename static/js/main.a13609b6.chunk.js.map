{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","props","state","images","imageSize","imageQty","imagesToSlide","moveSteps","move","infinite","animationInterval","handleImageSize","event","newSize","target","value","setState","handleImageQty","defineCarouselWidth","handleImagesToSlide","defineFwdMoveStep","length","defineRevMoveStep","handleNextClick","handlePrevClick","setAnimationInterval","defineAnimation","clearInterval","animation","setInterval","infiniteRotate","this","className","disabled","type","onClick","onChange","cn","htmlFor","id","defaultValue","min","max","map","el","index","key","filter","style","width","img","right","src","alt","React","PureComponent","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a13609b6.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nclass Carousel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.animation = null;\n  }\n\n  state = {\n    images: this.props.images,\n    imageSize: 100,\n    imageQty: 3,\n    imagesToSlide: 1,\n    moveSteps: 0,\n    move: 0,\n    infinite: false,\n    animationInterval: 1000,\n  }\n\n  handleImageSize = (event) => {\n    const newSize = +event.target.value;\n\n    this.setState(state => ({\n      imageSize: newSize,\n      move: 0,\n    }));\n  }\n\n  handleImageQty = (event) => {\n    this.setState({ imageQty: +event.target.value });\n  }\n\n  defineCarouselWidth = () => (\n    this.state.imageQty * this.state.imageSize\n  )\n\n  handleImagesToSlide = (event) => {\n    this.setState({ imagesToSlide: +event.target.value });\n  }\n\n  defineFwdMoveStep = () => {\n    (this.state.move + this.state.imageSize * this.state.imagesToSlide)\n    > (this.props.images.length * this.state.imageSize\n      - this.state.imageSize * this.state.imageQty)\n      ? this.setState(state => ({\n        move: state.move\n          + ((state.images.length * state.imageSize) - state.move\n            - (state.imageSize * state.imageQty)),\n        moveSteps: state.moveSteps + 1,\n      }))\n      : this.setState(state => ({\n        move: state.move + state.imageSize * state.imagesToSlide,\n        moveSteps: state.moveSteps + 1,\n      }));\n  }\n\n  defineRevMoveStep = () => {\n    this.state.move - this.state.imageSize * this.state.imagesToSlide < 0\n      ? this.setState(state => ({\n        move: 0,\n      }))\n      : this.setState(state => ({\n        move: state.move - state.imageSize * state.imagesToSlide,\n      }));\n  }\n\n  handleNextClick = () => {\n    this.state.move === this.props.images.length * this.state.imageSize\n    - this.state.imageSize * this.state.imageQty\n      ? this.setState({ move: 0 })\n      : this.defineFwdMoveStep();\n  }\n\n  handlePrevClick = () => {\n    this.state.move === 0 ? this.setState(state => ({\n      move: this.props.images.length * state.imageSize\n          - state.imageSize * state.imageQty,\n    }))\n      : this.defineRevMoveStep();\n  }\n\n  setAnimationInterval = (event) => {\n    this.setState({ animationInterval: (+event.target.value) * 1000 });\n  }\n\n  defineAnimation = () => {\n    !this.state.infinite\n      ? this.animation = setInterval(() => {\n        this.handleNextClick();\n      }, this.state.animationInterval)\n      : clearInterval(this.animation);\n  }\n\n  infiniteRotate = () => {\n    this.setState(state => ({\n      infinite: !state.infinite,\n    }));\n    this.defineAnimation();\n  }\n\n  render() {\n    const { images,\n      imageSize,\n      imageQty,\n      imagesToSlide,\n      move,\n      infinite,\n      animationInterval } = this.state;\n\n    return (\n      <div className=\"carousel\">\n        <h1\n          className=\"header\"\n        >\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n        <div className=\"control\">\n\n          <button\n            disabled={infinite}\n            className=\"control__button\"\n            type=\"button\"\n            onClick={this.handlePrevClick}\n          >\n            &larr;\n          </button>\n\n          <div className=\"control__settings\">\n            <div className=\"control__settings_toggle\">\n              <span>Auto Mode</span>\n              <span>   </span>\n              <label className=\"switch\">\n                <input type=\"checkbox\" onChange={this.infiniteRotate} />\n                <span className=\"slider round\" />\n              </label>\n            </div>\n\n            <div\n              className={cn(infinite\n                ? 'control__settings_disabled'\n                : 'control__settings_active')}\n            >\n              <div className=\"control__settings_element\">\n                <label htmlFor=\"animation__speed\">Animation Speed</label>\n                <select\n                  id=\"animation__speed\"\n                  disabled={infinite}\n                  onChange={this.setAnimationInterval}\n                  value={animationInterval / 1000}\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </select>\n\n              </div>\n              <div className=\"control__settings_element\">\n                <span>Adjust icons size</span>\n                <input\n                  className=\"element__slider\"\n                  disabled={infinite}\n                  onChange={this.handleImageSize}\n                  type=\"range\"\n                  defaultValue=\"100\"\n                  min=\"50\"\n                  max=\"200\"\n                />\n              </div>\n              <div className=\"control__settings_element\">\n\n                <label htmlFor=\"images_to_show\">Images on slider</label>\n                <select\n                  disabled={infinite}\n                  value={imageQty}\n                  onChange={this.handleImageQty}\n                  id=\"images_to_show\"\n                >\n\n                  {images.map((el, index) => (\n                    <option key={el}>{index + 1}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"control__settings_element\">\n\n                <label htmlFor=\"images_to_move\">Images to scroll</label>\n                <select\n                  disabled={infinite}\n                  value={imagesToSlide}\n                  id=\"images_to_move\"\n                  onChange={this.handleImagesToSlide}\n                >\n                  {(images.filter((el, index) => (\n                    index <= (images.length - imageQty - 1)\n                  ))).map((el, index) => (\n                    <option key={el}>{index + 1}</option>\n                  ))}\n                </select>\n              </div>\n\n            </div>\n          </div>\n          <button\n            disabled={infinite}\n            className=\"control__button\"\n            type=\"button\"\n            onClick={this.handleNextClick}\n          >\n            &rarr;\n          </button>\n        </div>\n\n        <ul\n          style={{ width: this.defineCarouselWidth() }}\n          className=\"carousel__list\"\n        >\n          {images.map((img, index) => (\n            <li\n              key={+index}\n              className=\"carousel__list_item\"\n              style={{ right: `${move}px` }}\n            >\n              <img\n                style={{ width: imageSize }}\n                className=\"carousel__list_image\"\n                src={img}\n                alt={index + 1}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <Carousel images={images} />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}